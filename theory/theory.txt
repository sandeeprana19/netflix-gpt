Episode - 14 | NetflixGPT - Building the core

- How can we use create-react-app to create our react project? Explain create-react-app briefly?
A. First of all, write the command npx create-react-app netflix-gpt and this netflix-gpt is the name of the project. Now, it will take some time and it will install lot of packages for us and it will create a basic folder structure for us. So it uses webpack, jest, etc. so a lot of scaffolding things it already to it for us right. So that is why, lot of developers prefer to use these scafolds just like create-react-app with them right.

- Which bundler does create-react-app uses behind the scene?
A.Webpack is the bundler that create-react-app uses behind the scene.

- Define Webpack?
A. Webpack is also a bundler which does similar job like parcel.

- Can we create react project using vite?
A. Yes! We can create react project using vite.

- How will we install tailwindcss after creating our react project using create-react-app?
A. Go to tailwindcss website > click on get started > go to f mework guides > click on create-react-app then it gives us the steps to setup tailwindcss into our create-react-app:
I. First of all, we don't have to install the project because we already had a project so we've to skip this create your project step.
II. We've to install tailwindcss using the command npm install -D tailwindcss and npx tailwindcss init so copy it and run it on terminal. So it will install two things that are tailwindcss and tailwind.config.js automagically.
III. Now, tailwindcss website says we've to configure the paths right so the copy the config and then replace and paste it within already existing config in our project that is tailwind.config.js file.
IV. Now, we just have to write three things in our index.css file so copy the code and paste it inside our project index.css file.
V. And then, we just have to run our project and everything will work.

So that's all the above setup we need for tailwindcss inside our create-react-app.

17/05/2024

A. We can use the reference of those input boxes. Suppose if we want to find what is there in input box so we need a reference to an input box and that reference is created by react right using useRef hook

- How will we use useRef?
A. We can use const email = useRef() so this is how we write our useRef hook and now this useRef hook comes from react itself right and we'll give initial as null. And now we'll reference this email to our input box so we'll write ref={email} as prop of this input box.


20/05/2024:

- Why we need to use onAuthStateChanged api instead of dispatch action?
A.The onAuthStateChanged api is called whenever the user sign in, sign up, sign out and whenever there is authentication state changed suppose we created a user and we sign in and we want to do something whenever there is auth changed so if we want to handle this auth changed thing then we've to use this onAuthStateChanged api so this is kind of like a eventListener so if the user sign in, sign up and sign out this onAuthStateChanged api will be called automatically.

- How to we unsubscribe from onAuthStateChanged?
A. So basically, this onAuthStateChanged return an unsubscribe function and if we call this unsubscribe function then it will remove this onAuthStateChanged from our browser so we'll unsubscribe it when our header component unmount or unload.

Episode - 15 | NetflixGPT - Building the Core

- How to register our app to TMDB?
A. We can register our app to TMDB by following the steps like go to the TMDB website => then we've to login => then go to edit profile => then we've to go API => then it will ask you to register our app and once we register it we'll get api key and api react access token.

- Why an api call happen twice or any other thing are also happening twice in our react application?
A. When we created our react app using create-react-app so it gave us scaffolds of project right and it also wrapped our <App /> with <React.StrictMode></React.StrictMode> so if we'll remove this <React.StrictMode> right it will just call api onces. And if we'll keep <React.StrictMode> as it is also then api call with just happen twice in our local when we're developing our app but if we make a build for our production <React.StrictMode> will not make api call twice. So the reason behind <React.StrictMode> make api call twice or any other thing twice is react does extra rendering of our component to check some inconsistency between our calls and this only happens in development mode and it will throw an error if there is some inconsistency in our rendering cycle so it a good thing and it isn't a bad thing if it is happening twice.